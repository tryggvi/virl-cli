#!/usr/bin/perl -w
# This is a template for perl scripts

use strict;
use Getopt::Long;
use JSON;

#apt-get install libjson-perl

## Settings
my $user = "guest";
my $pass = "guest";

## Global variables
my ($o_verb, $o_help, $o_sim_list, $o_session_id, $o_console_list);

## Funtions
sub check_options {
	Getopt::Long::Configure ("bundling");
	GetOptions(
		'v'     => \$o_verb,            'verbose'	=> \$o_verb,
		'h'     => \$o_help,            'help'	=> \$o_help,
		'L'     => \$o_sim_list,            'sim-list'	=> \$o_sim_list,
		'C'     => \$o_console_list,            'console-list'	=> \$o_console_list,
		's:s'     => \$o_session_id,            'session-id:s'	=> \$o_session_id,
	);

	if(defined ($o_help)){
		help();
		exit 1;
	}

	if(defined($o_sim_list)){
		sim_list();
	}

	if(defined($o_console_list)){
		console_list();
	}
}

sub RunQuery($){
	my ($query) = @_;

	my $cmd = "/usr/local/bin/virl_std_client --json --quiet --username $user --password $pass $query";
	print "Running $cmd\n" if $o_verb;

	my $data;
	open(Q, "$cmd|");
	while(<Q>){
		chomp($_);
		if($data){
			$data .= "\n";
		}
		$data .= $_;
	}
	close(Q);

	my $json = new JSON;
	my %output =  %{$json->decode($data)};
	return %output;
}

sub sim_list(){
	my @data = sim_list_raw();

	print "SessionID                                Status\n";
	foreach my $x (@data){
		my %y = %$x;
		printf("%-40s  %-10s\n", 
			$y{"session_id"}, 
			$y{"status"}
		);
	}
}

sub sim_list_raw(){
	my %results = RunQuery("simengine-list");
	my @output;
	my $i=0;
	while (my ($key, $value) = each %results) {
		my %x = %$value;
		while (my ($xkey, $xvalue) = each %x) {
			my %y = %$xvalue;
			$output[$i] = ({
				"session_id" => $xkey,
				"status" => $y{"status"}
			});
			$i++;
		}
	}
	return @output;
}

sub console_list_display($){
	my ($session_id) = @_;
	my %results = RunQuery("simengine-serial-port  --port-id console --mode telnet --session-id $session_id");

	foreach my $key (sort keys %results) {
		my $value = $results{$key};
		if($value){
			my ($ip, $port) = split(":", $value);
			printf("%-30s %-35s %-40s %-40s\n",
				$key,
				"$ip:$port",
				"telnet $ip $port",
				$session_id,
			);
		}
	}
}

sub console_list($){
	print "Hostname                       IP:port                             Telnet                                   Session\n";
	if(defined($o_session_id)){
		my @data = console_list_display($o_session_id);
	} else {
		my @data = sim_list_raw();
		foreach my $x (@data){
			my %y = %$x;
			console_list_display($y{"session_id"});
		}
	}
}

sub help() {
	print "$0\n";
        print <<EOT;
-v, --verbose
        print extra debugging information
-h, --help
	print this help message
-L, --sim-list
	List simulation labs
-C, --console-list
	List console addresses for session/simulation lab
-s [session_id], session-id=[session_id]
	Query based on session_id
EOT
}

sub print_usage() {
        print "Usage: $0 [-v] ]\n";
}

## Main
check_options();

#...code...#
